// lib/ui/welcome/welcome_page.dart
import 'package:easy_localization/easy_localization.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';

import '../../blocs/auth/auth_bloc.dart';
import '../../blocs/auth/auth_event.dart';
import '../../blocs/auth/auth_state.dart';
import 'package:nutrition_app/ui/home/home_page.dart';

import '../../services/user_service.dart';
import '../setup_profiles.dart/setup_profiles_screen.dart';

class WelcomePage extends StatelessWidget {
  const WelcomePage({super.key});

  static const double _hPadding = 20.0;
  static const double _vPadding = 25.0;
  static const double _logoSize = 40.0;
  static const double _spacing = 35.0;
  static const double _buttonHeight = 50.0;
  static const double _borderRadius = 30.0;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: BlocConsumer<AuthBloc, AuthState>(
          listener: (context, state) async {
            try {
              final profile = await UserService().fetchProfile();
              final hasProfile =
                  profile['first_name'] != null && profile['last_name'] != null;
              if (!context.mounted) return;
              if (!hasProfile) {
                Navigator.pushReplacement(
                    context,
                    MaterialPageRoute(
                        builder: (_) => const ProfileSetupScreen()));
              } else {
                Navigator.pushReplacement(context,
                    MaterialPageRoute(builder: (_) => const HomePage()));
              }
            } catch (e) {
              Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(
                      builder: (_) => const ProfileSetupScreen()));
            }
          },
          builder: (context, state) {
            final isLoading = state is AuthLoading;
            return SingleChildScrollView(
              padding: const EdgeInsets.symmetric(
                  horizontal: _hPadding, vertical: _vPadding),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  const _Header(),
                  const SizedBox(height: _spacing),
                  Text(
                    'welcome'.tr(),
                    style: const TextStyle(
                      fontSize: 28,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  const SizedBox(height: _spacing / 2),
                  Text(
                    'welcome_message'.tr(),
                    style: TextStyle(
                      fontSize: 16,
                      color: Colors.grey[700],
                    ),
                  ),
                  const SizedBox(height: _spacing),
                  if (isLoading)
                    const Center(child: CircularProgressIndicator())
                  else ...[
                    _SocialButton(
                      asset: 'assets/icons/google.png',
                      textKey: 'login_with_google'.tr(),
                      onPressed: () =>
                          context.read<AuthBloc>().add(AuthSignInWithGoogle()),
                    ),
                    const SizedBox(height: _spacing / 2),
                    _SocialButton(
                      asset: 'assets/icons/facebook.png',
                      textKey: 'login_with_facebook'.tr(),
                      onPressed: () => context
                          .read<AuthBloc>()
                          .add(AuthSignInWithFacebook()),
                    ),
                    const SizedBox(height: _spacing / 2),
                    _SocialButton(
                      asset: 'assets/icons/apple.png'.tr(),
                      textKey: 'login_with_apple',
                      onPressed: () =>
                          context.read<AuthBloc>().add(AuthSignInWithApple()),
                    ),
                  ],
                  const SizedBox(height: _spacing),
                ],
              ),
            );
          },
        ),
      ),
    );
  }
}

class _Header extends StatelessWidget {
  const _Header();
  @override
  Widget build(BuildContext context) {
    return Row(
      children: [
        Image.asset(
          'assets/images/logo.png',
          width: WelcomePage._logoSize,
          height: WelcomePage._logoSize,
        ),
        const SizedBox(width: 8),
        const Text(
          'FoodNutri',
          style: TextStyle(
            fontSize: 20,
            fontWeight: FontWeight.bold,
            color: Colors.lightGreenAccent,
          ),
        ),
      ],
    );
  }
}

class _SocialButton extends StatelessWidget {
  final String asset;
  final String textKey;
  final VoidCallback onPressed;

  const _SocialButton({
    required this.asset,
    required this.textKey,
    required this.onPressed,
  });

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      width: double.infinity,
      height: WelcomePage._buttonHeight,
      child: OutlinedButton.icon(
        onPressed: onPressed,
        icon: Image.asset(asset, width: 24, height: 24),
        label: Text(
          textKey.tr(),
          style: const TextStyle(fontSize: 16),
        ),
        style: OutlinedButton.styleFrom(
          side: BorderSide(color: Colors.grey.shade300),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(WelcomePage._borderRadius),
          ),
          backgroundColor: Colors.white,
          foregroundColor: Colors.black87,
        ),
      ),
    );
  }
}
